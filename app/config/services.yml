# Learn more about services, parameters and containers at
# https://symfony.com/doc/current/service_container.html
parameters:
    #parameter_name: value

services:
    # default configuration for services in *this* file
    _defaults:
        # automatically injects dependencies in your services
        autowire: true
        # automatically registers your services as commands, event subscribers, etc.
        autoconfigure: true
        # this means you cannot fetch services directly from the container via $container->get()
        # if you need to do this, you can override this setting on individual services
        public: false

    # makes classes in src/AppBundle available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    AppBundle\:
        resource: '../../src/AppBundle/*'
        # you can exclude directories or files
        # but if a service is unused, it's removed anyway
        exclude: '../../src/AppBundle/{Entity,Repository,Tests}'

    # controllers are imported separately to make sure they're public
    # and have a tag that allows actions to type-hint services
    AppBundle\Controller\:
        resource: '../../src/AppBundle/Controller'
        public: true
        tags: ['controller.service_arguments']

    # add more services, or override services that need manual wiring
    # AppBundle\Service\ExampleService:
    #     arguments:
    #         $someArgument: 'some_value'

    # ...
#    admin.prospect:
#        class: AppBundle\Admin\ProspectAdmin
#        arguments: [~, AppBundle\Entity\Prospect, ~]
#        tags:
#            - { name: sonata.admin, manager_type: orm, label: Prospects }
#        public: true
#
#    # ...
#    admin.call_availability:
#        class: AppBundle\Admin\CallAvailabilityAdmin
#        arguments: [~, AppBundle\Entity\CallAvailability, ~]
#        tags:
#            - { name: sonata.admin, manager_type: orm, label: Disponibilit√©s }
#        public: true
#
#    # ...
#    admin.loft_type:
#        class: AppBundle\Admin\LoftTypeAdmin
#        arguments: [~, AppBundle\Entity\LoftType, ~]
#        tags:
#            - { name: sonata.admin, manager_type: orm, label: Type d'habitations }
#        public: true
#
#    # ...
#    admin.heat_system:
#        class: AppBundle\Admin\HeatSystemAdmin
#        arguments: [~, AppBundle\Entity\HeatSystem, ~]
#        tags:
#            - { name: sonata.admin, manager_type: orm, label: Chauffage principale }
#        public: true
#
#    # ...
#    admin.resource_limit:
#        class: AppBundle\Admin\ResourceLimitAdmin
#        arguments: [~, AppBundle\Entity\ResourceLimit, ~]
#        tags:
#            - { name: sonata.admin, manager_type: orm, label: Plafonds de ressources }
#        public: true

    AppBundle\Service\Eligible:
        public: true
        autowire: false
        arguments:
             $em: "@doctrine.orm.entity_manager"

    AppBundle\Service\FileHandler:
        public: true
        autowire: false
        arguments: